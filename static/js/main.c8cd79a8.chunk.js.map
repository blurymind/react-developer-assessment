{"version":3,"sources":["mock/index.js","components/Box.tsx","styled.ts","components/Navigation.tsx","pages/utils.ts","hooks/usePagination.ts","components/Pagination.tsx","hooks/useLocalStorage.ts","pages/Home.tsx","pages/About.tsx","pages/App.tsx","index.tsx"],"names":["createServer","routes","this","namespace","get","data","Box","styled","div","position","space","color","layout","flexbox","grid","typography","border","BoxComponent","children","href","props","StyledNavigation","button","StyledNavigationItem","Link","p","css","$selected","NavigationItem","to","selected","Navigation","CategoriesEnum","navigationItems","pathname","useLocation","map","title","path","count","borderRadius","bg","size","textAlign","getFormatedDate","date","postDate","Date","getDay","getMonth","getFullYear","sorters","a","b","summary","author","name","publishDate","filters","item","query","toLowerCase","includes","all","filterAndSortPosts","posts","sortBy","sort","filter","DOTS","range","start","end","length","Array","from","_","idx","Pagination","onPageChange","totalCount","siblingCount","currentPage","pageSize","rest","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","nextDisabled","previousDisabled","display","flexDirection","alignItems","opacity","undefined","onClick","mr","pageNumber","m","px","minWidth","borderColor","ml","useLocalStorage","key","initialValue","useState","window","localStorage","getItem","JSON","parse","err","console","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","Option","Select","Search","Input","Text","Typography","Title","Post","post","isEven","padding","as","src","avatar","Home","setSortBy","sortDesc","setSortDesc","setQuery","setCurrentPage","filteredSortedPosts","reverse","entriesOnPage","slice","onSetSortBy","newState","prevState","level","top","left","pb","borderBottom","allowClear","placeholder","defaultValue","addonBefore","italic","style","width","onChange","Object","keys","category","onSearch","gridTemplateColumns","gridGap","mx","DownOutlined","UpOutlined","strong","underline","index","About","fontWeight","flexWrap","pr","App","setPosts","useEffect","fetch","then","res","json","log","basename","process","justifyContent","py","fontSize","render","location","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8cd79a8.chunk.js","sourcesContent":["import { createServer } from 'miragejs';\n\nimport data from './data.json';\n\ncreateServer({\n  routes() {\n    this.namespace = 'api';\n\n    this.get('/posts', () => {\n      return data;\n    });\n  },\n});\n","import React, { ReactNode, FC } from 'react';\nimport styled from 'styled-components';\nimport {\n  layout,\n  space,\n  position,\n  flexbox,\n  typography,\n  border,\n  color,\n  grid,\n  LayoutProps,\n  PositionProps,\n  FlexboxProps,\n  TypographyProps,\n  SpaceProps,\n  BorderProps,\n  ColorProps,\n  GridProps,\n} from 'styled-system';\n\nexport interface Props\n  extends PositionProps,\n    SpaceProps,\n    LayoutProps,\n    FlexboxProps,\n    TypographyProps,\n    BorderProps,\n    ColorProps,\n    GridProps {\n  children?: ReactNode;\n  as?: string | keyof JSX.IntrinsicElements | React.ComponentType<any>;\n  src?: string;\n  href?: string;\n  onClick?: () => void;\n  title?: string;\n}\n\nconst Box = styled.div<Props>`\n  ${position}\n  ${space}\n  ${color}\n  ${layout}\n  ${flexbox}\n  ${grid}\n  ${typography}\n  ${border}\n`;\n\nconst BoxComponent: FC<Props> = ({ children, href, ...props }) => {\n  return <Box href={href} {...props}>{children || href}</Box>;\n};\n\nexport default BoxComponent;\n","import styled, {css} from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nexport const StyledButton = styled.button`\n  border: 1px black solid;\n  color: black;\n  background-color: cyan;\n\n  &:hover {\n    background-color: white;\n  }\n`;\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n`;\n\nexport const StyledNavigationItem = styled(Link)<{$selected: boolean}>`\n  text-decoration: none;\n  min-width: 80px;\n\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  &:hover{\n    background-color: #e4e4e4;\n  }\n  padding: 2px 4px;\n  border-radius: 2px;\n\n  ${p => css`\n  ${p.$selected && `\n  border-bottom: 2px solid blue;\n  `}\n  ${!p.$selected && `padding-bottom: 4px;`}\n`}\n`","import React, { ReactNode } from \"react\";\nimport {\n  useLocation\n} from \"react-router-dom\";\n \nimport Box from \"../components/Box\";\n \nimport { StyledNavigationItem, StyledNavigation } from '../styled'\n\ninterface NavigationItemProps {\n  children: ReactNode;\n  to?: string;\n  selected?: boolean;\n}\n\nfunction NavigationItem({children, to = \"/\", selected = false}: NavigationItemProps) {\n  return (\n    <StyledNavigationItem to={to} $selected={selected}>\n      {children} \n    </StyledNavigationItem>\n  )\n}\n\n\ntype NanigationItemsType = Array<{title: any, path: any, count?: number}>\ninterface Props {\n  navigationItems: NanigationItemsType;\n}\n\nfunction Navigation({navigationItems}: Props) {\n  const { pathname } = useLocation();\n\n  return (\n  <StyledNavigation>\n    {navigationItems.map(({title, path, count}: any) => (\n      <NavigationItem key={path} to={path} selected={pathname === path}>\n        <Box>{title}</Box>\n        {count && <Box borderRadius=\"15px\" bg=\"#2196f3\" color=\"white\" size=\"25px\" textAlign=\"center\">{count }</Box>}\n      </NavigationItem>\n    ))}\n  </StyledNavigation>\n  )\n\n}\n\nexport default Navigation;\n","import { PostType } from './types';\nexport enum CategoriesEnum {\n  title = 'title',\n  date = 'date',\n  author = 'author',\n  summary = 'summary',\n  all = 'all',\n}\n\nexport const getFormatedDate = (date: string) => {\n  const postDate = new Date(date);\n  return `${postDate.getDay()}/${postDate.getMonth()}/${postDate.getFullYear()}`;\n};\n\nconst sorters: any = {\n  title: (a: PostType, b: PostType) => {\n    if (a.title < b.title) {\n      return -1;\n    }\n    if (a.title > b.title) {\n      return 1;\n    }\n    return 0;\n  },\n  summary: (a: PostType, b: PostType) => {\n    if (a.summary < b.summary) {\n      return -1;\n    }\n    if (a.summary > b.summary) {\n      return 1;\n    }\n    return 0;\n  },\n  author: (a: PostType, b: PostType) => {\n    if (a.author.name < b.author.name) {\n      return -1;\n    }\n    if (a.author.name > b.author.name) {\n      return 1;\n    }\n    return 0;\n  },\n  date: (a: PostType, b: PostType) => {\n    const dateA = new Date(a.publishDate);\n    const dateB = new Date(b.publishDate);\n    //@ts-ignore\n    return dateA - dateB;\n  },\n};\n\nexport const filters: any = {\n  title: (item: PostType, query: string) =>\n    item.title.toLowerCase().includes(query.toLowerCase()),\n  author: (item: PostType, query: string) =>\n    item.author.name.toLowerCase().includes(query.toLowerCase()),\n  summary: (item: PostType, query: string) =>\n    item.summary.toLowerCase().includes(query.toLowerCase()),\n  date: (item: PostType, query: string) =>\n    getFormatedDate(item.publishDate).includes(query),\n  all: (item: PostType, query: string) =>\n    item.title.toLowerCase().includes(query.toLowerCase()) ||\n    item.summary.toLowerCase().includes(query.toLowerCase()) ||\n    item.author.name.toLowerCase().includes(query.toLowerCase()) ||\n    getFormatedDate(item.publishDate).includes(query),\n};\n\nexport const filterAndSortPosts = (\n  posts: Array<PostType>,\n  sortBy: CategoriesEnum,\n  query = ''\n): Array<PostType> => {\n  if (query === '') return posts.sort(sorters[sortBy]); //bailout earlier to save on filtering when not required\n  return posts\n    .sort(sorters[sortBy])\n    .filter((item) => filters[sortBy](item, query));\n};\n","import { useMemo } from 'react';\n\nexport const DOTS = '...';\n\nconst range = (start: number, end: number) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\ninterface Props {\n  totalCount: number;\n  pageSize: number;\n  siblingCount: number;\n  currentPage: number;\n}\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage\n}: Props): Array<string|number> => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    /*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange || [];\n};","import React from 'react';\nimport { usePagination, DOTS } from '../hooks/usePagination';\nimport Box, { Props as BoxProps } from '../components/Box';\n\ninterface Props extends BoxProps {\n  onPageChange: (a: number) => void;\n  totalCount: number;\n  siblingCount?: number;\n  currentPage: number;\n  pageSize: number;\n}\n\nconst Pagination = ({\n  onPageChange,\n  totalCount,\n  siblingCount = 1,\n  currentPage,\n  pageSize,\n  ...rest\n}: Props) => {\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const lastPage = paginationRange[paginationRange.length - 1];\n\n  const nextDisabled = currentPage === lastPage;\n  const onNext = () => {\n    if (nextDisabled) return;\n    onPageChange(currentPage + 1);\n  };\n\n  const previousDisabled = currentPage === 1;\n  const onPrevious = () => {\n    if (previousDisabled) return;\n    onPageChange(currentPage - 1);\n  };\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...(rest as BoxProps)}\n    >\n      <Box\n        opacity={previousDisabled ? '0.5' : undefined}\n        onClick={onPrevious}\n        mr=\"5px\"\n      >\n        ⬅️\n      </Box>\n      {paginationRange.map((pageNumber) => {\n        if (pageNumber === DOTS) {\n          return <Box key={pageNumber}>&#8230;</Box>;\n        }\n\n        return (\n          <Box\n            onClick={() => onPageChange(pageNumber as number)}\n            border=\"1px #80808066 solid\"\n            m=\"2px\"\n            px=\"4px\"\n            minWidth=\"30px\"\n            borderRadius=\"2px\"\n            textAlign=\"center\"\n            key={pageNumber}\n            {...(pageNumber === currentPage ? { borderColor: 'red' } : {})}\n          >\n            {pageNumber}\n          </Box>\n        );\n      })}\n      <Box opacity={nextDisabled ? '0.5' : undefined} onClick={onNext} ml=\"5px\">\n        ➡️\n      </Box>\n    </Box>\n  );\n};\n\nexport default Pagination;\n","import { useState } from \"react\";\n\n//https://web.dev/cache-api-quick-guide/\nexport const useLocalStorage = (key: any, initialValue: any): any => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (err) {\n      console.error(err);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: any) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n\nexport const getLocalStorage = (key: string): any => {\n  try {\n    const item = window.localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};","import React, { useMemo } from 'react';\nimport { Select, Input } from 'antd';\nimport { Typography } from 'antd';\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\n\nimport { filterAndSortPosts, getFormatedDate, CategoriesEnum } from './utils';\nimport { PostType } from './types';\nimport Box from '../components/Box';\nimport Pagination from '../components/Pagination';\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst { Option } = Select;\nconst { Search } = Input;\nconst { Text, Title } = Typography;\n\nconst Post = ({ post, isEven }: { post: PostType; isEven: boolean }) => {\n  const date = getFormatedDate(post.publishDate);\n  const props = { bg: isEven ? '#deffff' : undefined, padding: '3px' };\n  return (\n    <>\n      <Box\n        as=\"img\"\n        src={post.author.avatar}\n        border={`1px ${isEven ? 'cyan' : 'pink'} solid`}\n        borderRadius=\"3px\"\n      />\n      <Box title={post.author.name} {...props}>\n        {post.author.name}\n      </Box>\n      <Box title={post.title} {...props}>\n        {post.title}\n      </Box>\n      <Box title={post.summary} {...props}>\n        {post.summary}\n      </Box>\n      <Box title={date} {...props}>\n        {date}\n      </Box>\n    </>\n  );\n};\n\ninterface Props {\n  posts: Array<PostType>;\n}\n\nconst PageSize = 30;\nconst Home = ({ posts = [] }: Props) => {\n  const [sortBy, setSortBy] = useLocalStorage('sortBy', CategoriesEnum.all);\n  const [sortDesc, setSortDesc] = useLocalStorage('sortDesc', false);\n  const [query, setQuery] = useLocalStorage('query', '');\n  const [currentPage, setCurrentPage] = useLocalStorage('currentPage', 1);\n\n  const filteredSortedPosts = useMemo(() => {\n    if (sortDesc) return filterAndSortPosts(posts, sortBy, query).reverse();\n    return filterAndSortPosts(posts, sortBy, query);\n  }, [sortBy, query, posts, sortDesc]);\n  const firstPageIndex = (currentPage - 1) * PageSize;\n  const lastPageIndex = firstPageIndex + PageSize;\n  const entriesOnPage = filteredSortedPosts.slice(\n    firstPageIndex,\n    lastPageIndex\n  );\n\n  const onSetSortBy = (newState: CategoriesEnum) => {\n    setSortBy((prevState: CategoriesEnum) => {\n      if (prevState === newState) setSortDesc(!sortDesc);\n      return newState;\n    });\n  };\n\n  return (\n    <Box position=\"relative\">\n      <Title level={4}>Posts</Title>\n      <Box\n        position=\"sticky\"\n        top=\"0\"\n        left=\"50%\"\n        bg=\"white\"\n        px=\"3px\"\n        pb=\"2px\"\n        borderBottom=\"1px #80808085 solid\"\n      >\n        <Pagination\n          currentPage={currentPage}\n          totalCount={filteredSortedPosts.length}\n          pageSize={PageSize}\n          onPageChange={setCurrentPage}\n        />\n        <Search\n          allowClear\n          placeholder=\"Enter search query\"\n          defaultValue={query}\n          addonBefore={\n            <Box>\n              <Text italic>Sort/Search by</Text>\n              <Select\n                defaultValue={CategoriesEnum.all}\n                value={sortBy}\n                style={{ width: 120 }}\n                onChange={onSetSortBy}\n              >\n                {Object.keys(CategoriesEnum).map((category) => (\n                  <Option value={category} key={`${category}_sortBy`}>\n                    {category}\n                  </Option>\n                ))}\n              </Select>\n            </Box>\n          }\n          onSearch={setQuery}\n        />\n      </Box>\n\n      <Box\n        display=\"grid\"\n        gridTemplateColumns=\"55px auto auto auto auto\"\n        gridGap=\"2px\"\n        mx={['4px', '8px']}\n      >\n        <Box textAlign=\"center\" onClick={() => setSortDesc(!sortDesc)}>\n          {sortDesc ? <DownOutlined /> : <UpOutlined />}\n        </Box>\n        <Text\n          strong\n          onClick={() => onSetSortBy(CategoriesEnum.author)}\n          underline={sortBy === CategoriesEnum.author}\n        >\n          Author\n        </Text>\n        <Text\n          strong\n          onClick={() => onSetSortBy(CategoriesEnum.title)}\n          underline={sortBy === CategoriesEnum.title}\n        >\n          Title\n        </Text>\n        <Text\n          strong\n          onClick={() => onSetSortBy(CategoriesEnum.summary)}\n          underline={sortBy === CategoriesEnum.summary}\n        >\n          Summary\n        </Text>\n        <Text\n          strong\n          onClick={() => onSetSortBy(CategoriesEnum.date)}\n          underline={sortBy === CategoriesEnum.date}\n        >\n          Date\n        </Text>\n\n        {entriesOnPage.map((post, index) => (\n          <Post post={post} key={`post_${index}`} isEven={index % 2 === 0} />\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nimport Box from '../components/Box';\n\nconst About = () => {\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" m=\"20px\">\n      <Box as=\"h2\" fontWeight=\"strong\">Demo React Page created by Todor Imreorov</Box>\n      <Box display=\"flex\" flexWrap=\"wrap\"><Box  pr=\"4px\">email: </Box><Box as=\"a\" href=\"blurymind@gmail.com\"/> </Box>\n      <Box display=\"flex\" flexWrap=\"wrap\"><Box  pr=\"4px\">git: </Box><Box as=\"a\" href=\"https://github.com/blurymind\"/> </Box> \n      Using Typography, Styled, Styled-systems, some Antd components and React-router-dom\n    </Box>\n  );\n}\n\nexport default About;","import React, { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Box from '../components/Box';\nimport Navigation from '../components/Navigation';\n\nimport Home from './Home';\nimport About from './About';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/posts')\n      .then((res) => res.json())\n      .then<any>((res) => setPosts(res.posts));\n\n    //unmount\n    return () => {};\n  }, []);\n\n  console.log('posts', posts);\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <div>\n        <Box\n          as=\"nav\"\n          display=\"flex\"\n          flexDirection=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          px={['3px', '12px']}\n          py={['2px', '10px']}\n          borderBottom=\"1px solid grey\"\n        >\n          <Navigation\n            navigationItems={[\n              { title: 'Home', path: '/', count: posts.length },\n              { title: 'About', path: '/about' },\n            ]}\n          />\n          <Box fontSize=\"3\" fontWeight=\"bold\">\n            NetContruct\n          </Box>\n        </Box>\n\n        {/* <Switch>\n          <Route exact path=\"/\">\n            <Home posts={posts} />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n        </Switch> */}\n      </div>\n      <Route\n          render={({ location }) => (\n            <Switch location={location}>\n              <Route exact path=\"/\">\n                <Home posts={posts} />\n              </Route>\n              <Route path=\"/about\">\n                <About />\n              </Route>\n            </Switch>\n          )}\n        />\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n/**\n * This file can be ignored, please work in ./components/App.jsx\n */\n\n// Include mock API.\nimport './mock';\n\n// Include styles.\nimport './styles/index.css';\n\n// Include application component.\nimport App from './pages/App';\n\n// Include ext component library styles\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}